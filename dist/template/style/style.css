/* Common styles */
@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700,800");
@import url("https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css");
@font-face {
  font-family: Charter Icons;
  src: url(../../res/fonts/charter-icons/charter-icons.eot);
  src: url(../../res/fonts/charter-icons/charter-icons.eot?iefix) format("eot"),url(../../res/fonts/charter-icons/charter-icons.woff) format("woff"),url(../../res/fonts/charter-icons/charter-icons.ttf) format("truetype"),url(../../res/fonts/charter-icons/charter-icons.svg#webfont) format("svg");
}

@font-face {
  font-family: Channel Logos;
  src: url(../../res/fonts/channel-logos/channel-logos.eot);
  src: url(../../res/fonts/channel-logos/channel-logos.eot?iefix) format("eot"),url(../../res/fonts/channel-logos/channel-logos.woff) format("woff"),url(../../res/fonts/channel-logos/channel-logos.ttf) format("truetype"),url(../../res/fonts/channel-logos/channel-logos.svg#webfont) format("svg");
}

@font-face {
  font-family: Glyphicons Halflings;
  src: url(../../res/fonts/bootstrap-icons/glyphicons-halflings-regular.eot);
  src: url(../../res/fonts/bootstrap-icons/glyphicons-halflings-regular.eot?iefix) format("eot"),url(../../res/fonts/bootstrap-icons/glyphicons-halflings-regular.woff) format("woff"),url(../../res/fonts/bootstrap-icons/glyphicons-halflings-regular.ttf) format("truetype"),url(../../res/fonts/bootstrap-icons/glyphicons-halflings-regular.svg#webfont) format("svg");
}

main {
  margin-bottom: 5rem;
}

.container-fixed {
  max-width: 1200px;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlL3N0eWxlL3N0eWxlLnNjc3MiLCJ0ZW1wbGF0ZS9zdHlsZS9fdHlwZWZhY2VzLnNjc3MiLCJ0ZW1wbGF0ZS9zdHlsZS9zdHlsZS5jc3MiLCJ0ZW1wbGF0ZS9zdHlsZS9fYmFzZS5zY3NzIiwiY29tL3N0eWxlL21peGlucy9fcG9zaXRpb24uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUI7QUNBbkIscUZBQVk7QUFDWixrR0FBWTtBQUVaO0VBRUUsMkJBQTZCO0VBQzdCLDBEQUF5RDtFQUN6RCxzU0FBaVM7Q0NBbFM7O0FER0Q7RUFDRSwyQkFBNkI7RUFDN0IsMERBQXlEO0VBQ3pELHNTQUFpUztDQ0FsUzs7QURHRDtFQUNFLGtDQUFvQztFQUNwQywyRUFBMEU7RUFDMUUsMFdBQXFXO0NDQXRXOztBQ25CRDtFQUNDLG9CQUFvQjtDQUNwQjs7QUFHRDtFQUNFLGtCQUFrQjtFQ0puQixlQUQ4QjtFQUU5QixrQkFBa0I7RUFDbEIsbUJBQW1CO0NESW5CIiwiZmlsZSI6InRlbXBsYXRlL3N0eWxlL3N0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIENvbW1vbiBzdHlsZXMgKi9cclxuLy8gVGhpcyBmaWxlIGlzIHByaW1hcmlseSBmb3IgbG9hZGluZyB0aGUgcHJvcGVyIHN0eWxlcyBvbiB0aGUgcHJvdG90eXBlIHNpdGUgKHRoaXMpIGl0c2VsZi4gVGhlIGNvbXBpbGVkIENTUyBkb2Vzbid0IGdldCByZWxlYXNlZC9pbmdlc3RlZCBpbiB0aGlzIGZvcm0uXHJcbi8vIFZhcmlhYmxlcyAmIE1peGluc1xyXG5AaW1wb3J0ICdjb20vc3R5bGUvdmFyaWFibGVzJztcclxuQGltcG9ydCAnY29tL3N0eWxlL2Z1bmN0aW9ucyc7XHJcbkBpbXBvcnQgJ2xpYi9ib290c3RyYXAvbWl4aW5zJztcclxuQGltcG9ydCAnY29tL3N0eWxlL21peGlucyc7XHJcbkBpbXBvcnQgJ3R5cGVmYWNlcyc7XHJcbkBpbXBvcnQgJ2Jhc2UnO1xyXG4iLCJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fuczo0MDAsMzAwLDYwMCw3MDAsODAwJyk7XG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvZm9udC1hd2Vzb21lLzQuNy4wL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcycpO1xuXG5AZm9udC1mYWNlIHtcbiAgLy8gZm9udC1mYW1pbHk6IGNoYXJ0ZXItaWNvbnM7XG4gIGZvbnQtZmFtaWx5OiBcIkNoYXJ0ZXIgSWNvbnNcIjtcbiAgc3JjOiB1cmwoLi4vLi4vcmVzL2ZvbnRzL2NoYXJ0ZXItaWNvbnMvY2hhcnRlci1pY29ucy5lb3QpO1xuICBzcmM6IHVybCguLi8uLi9yZXMvZm9udHMvY2hhcnRlci1pY29ucy9jaGFydGVyLWljb25zLmVvdD9pZWZpeCkgZm9ybWF0KFwiZW90XCIpLCB1cmwoLi4vLi4vcmVzL2ZvbnRzL2NoYXJ0ZXItaWNvbnMvY2hhcnRlci1pY29ucy53b2ZmKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoLi4vLi4vcmVzL2ZvbnRzL2NoYXJ0ZXItaWNvbnMvY2hhcnRlci1pY29ucy50dGYpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoLi4vLi4vcmVzL2ZvbnRzL2NoYXJ0ZXItaWNvbnMvY2hhcnRlci1pY29ucy5zdmcjd2ViZm9udCkgZm9ybWF0KFwic3ZnXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiQ2hhbm5lbCBMb2dvc1wiO1xuICBzcmM6IHVybCguLi8uLi9yZXMvZm9udHMvY2hhbm5lbC1sb2dvcy9jaGFubmVsLWxvZ29zLmVvdCk7XG4gIHNyYzogdXJsKC4uLy4uL3Jlcy9mb250cy9jaGFubmVsLWxvZ29zL2NoYW5uZWwtbG9nb3MuZW90P2llZml4KSBmb3JtYXQoXCJlb3RcIiksIHVybCguLi8uLi9yZXMvZm9udHMvY2hhbm5lbC1sb2dvcy9jaGFubmVsLWxvZ29zLndvZmYpIGZvcm1hdChcIndvZmZcIiksIHVybCguLi8uLi9yZXMvZm9udHMvY2hhbm5lbC1sb2dvcy9jaGFubmVsLWxvZ29zLnR0ZikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybCguLi8uLi9yZXMvZm9udHMvY2hhbm5lbC1sb2dvcy9jaGFubmVsLWxvZ29zLnN2ZyN3ZWJmb250KSBmb3JtYXQoXCJzdmdcIik7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dseXBoaWNvbnMgSGFsZmxpbmdzJztcbiAgc3JjOiB1cmwoLi4vLi4vcmVzL2ZvbnRzL2Jvb3RzdHJhcC1pY29ucy9nbHlwaGljb25zLWhhbGZsaW5ncy1yZWd1bGFyLmVvdCk7XG4gIHNyYzogdXJsKC4uLy4uL3Jlcy9mb250cy9ib290c3RyYXAtaWNvbnMvZ2x5cGhpY29ucy1oYWxmbGluZ3MtcmVndWxhci5lb3Q/aWVmaXgpIGZvcm1hdChcImVvdFwiKSwgdXJsKC4uLy4uL3Jlcy9mb250cy9ib290c3RyYXAtaWNvbnMvZ2x5cGhpY29ucy1oYWxmbGluZ3MtcmVndWxhci53b2ZmKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoLi4vLi4vcmVzL2ZvbnRzL2Jvb3RzdHJhcC1pY29ucy9nbHlwaGljb25zLWhhbGZsaW5ncy1yZWd1bGFyLnR0ZikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybCguLi8uLi9yZXMvZm9udHMvYm9vdHN0cmFwLWljb25zL2dseXBoaWNvbnMtaGFsZmxpbmdzLXJlZ3VsYXIuc3ZnI3dlYmZvbnQpIGZvcm1hdChcInN2Z1wiKTtcbn1cbiIsIi8qIENvbW1vbiBzdHlsZXMgKi9cbkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fuczo0MDAsMzAwLDYwMCw3MDAsODAwXCIpO1xuQGltcG9ydCB1cmwoXCJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9mb250LWF3ZXNvbWUvNC43LjAvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzXCIpO1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkNoYXJ0ZXIgSWNvbnNcIjtcbiAgc3JjOiB1cmwoLi4vLi4vcmVzL2ZvbnRzL2NoYXJ0ZXItaWNvbnMvY2hhcnRlci1pY29ucy5lb3QpO1xuICBzcmM6IHVybCguLi8uLi9yZXMvZm9udHMvY2hhcnRlci1pY29ucy9jaGFydGVyLWljb25zLmVvdD9pZWZpeCkgZm9ybWF0KFwiZW90XCIpLCB1cmwoLi4vLi4vcmVzL2ZvbnRzL2NoYXJ0ZXItaWNvbnMvY2hhcnRlci1pY29ucy53b2ZmKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoLi4vLi4vcmVzL2ZvbnRzL2NoYXJ0ZXItaWNvbnMvY2hhcnRlci1pY29ucy50dGYpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoLi4vLi4vcmVzL2ZvbnRzL2NoYXJ0ZXItaWNvbnMvY2hhcnRlci1pY29ucy5zdmcjd2ViZm9udCkgZm9ybWF0KFwic3ZnXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiQ2hhbm5lbCBMb2dvc1wiO1xuICBzcmM6IHVybCguLi8uLi9yZXMvZm9udHMvY2hhbm5lbC1sb2dvcy9jaGFubmVsLWxvZ29zLmVvdCk7XG4gIHNyYzogdXJsKC4uLy4uL3Jlcy9mb250cy9jaGFubmVsLWxvZ29zL2NoYW5uZWwtbG9nb3MuZW90P2llZml4KSBmb3JtYXQoXCJlb3RcIiksIHVybCguLi8uLi9yZXMvZm9udHMvY2hhbm5lbC1sb2dvcy9jaGFubmVsLWxvZ29zLndvZmYpIGZvcm1hdChcIndvZmZcIiksIHVybCguLi8uLi9yZXMvZm9udHMvY2hhbm5lbC1sb2dvcy9jaGFubmVsLWxvZ29zLnR0ZikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybCguLi8uLi9yZXMvZm9udHMvY2hhbm5lbC1sb2dvcy9jaGFubmVsLWxvZ29zLnN2ZyN3ZWJmb250KSBmb3JtYXQoXCJzdmdcIik7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dseXBoaWNvbnMgSGFsZmxpbmdzJztcbiAgc3JjOiB1cmwoLi4vLi4vcmVzL2ZvbnRzL2Jvb3RzdHJhcC1pY29ucy9nbHlwaGljb25zLWhhbGZsaW5ncy1yZWd1bGFyLmVvdCk7XG4gIHNyYzogdXJsKC4uLy4uL3Jlcy9mb250cy9ib290c3RyYXAtaWNvbnMvZ2x5cGhpY29ucy1oYWxmbGluZ3MtcmVndWxhci5lb3Q/aWVmaXgpIGZvcm1hdChcImVvdFwiKSwgdXJsKC4uLy4uL3Jlcy9mb250cy9ib290c3RyYXAtaWNvbnMvZ2x5cGhpY29ucy1oYWxmbGluZ3MtcmVndWxhci53b2ZmKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoLi4vLi4vcmVzL2ZvbnRzL2Jvb3RzdHJhcC1pY29ucy9nbHlwaGljb25zLWhhbGZsaW5ncy1yZWd1bGFyLnR0ZikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybCguLi8uLi9yZXMvZm9udHMvYm9vdHN0cmFwLWljb25zL2dseXBoaWNvbnMtaGFsZmxpbmdzLXJlZ3VsYXIuc3ZnI3dlYmZvbnQpIGZvcm1hdChcInN2Z1wiKTtcbn1cblxubWFpbiB7XG4gIG1hcmdpbi1ib3R0b206IDVyZW07XG59XG5cbi5jb250YWluZXItZml4ZWQge1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4iLCJtYWluIHtcclxuXHRtYXJnaW4tYm90dG9tOiA1cmVtO1xyXG59XHJcblxyXG4vLyBGaXhlZC13aWR0aCBjb250ZW50IHNlY3Rpb24gY29udGFpbmVyXHJcbi5jb250YWluZXItZml4ZWQge1xyXG4gIG1heC13aWR0aDogMTIwMHB4O1xyXG4gIEBpbmNsdWRlIGNlbnRlci1ibG9jaztcclxufVxyXG4iLCIvLyBQb3NpdGlvbmluZ1xyXG5AbWl4aW4gY2VudGVyLWJsb2NrKCRkaXM6IGJsb2NrKSB7XHJcblx0ZGlzcGxheTogJGRpcztcclxuXHRtYXJnaW4tbGVmdDogYXV0bztcclxuXHRtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbkBtaXhpbiBob3Jpem9udGFsLWNlbnRlcigkcG9zOiBhYnNvbHV0ZSkge1xyXG5cdHBvc2l0aW9uOiAkcG9zO1xyXG5cdGxlZnQ6IDUwJTtcclxuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbn1cclxuXHJcbkBtaXhpbiB2ZXJ0aWNhbC1jZW50ZXIoJHBvczogYWJzb2x1dGUpIHtcclxuXHRwb3NpdGlvbjogJHBvcztcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0dG9wOiA1MCU7XHJcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG59XHJcblxyXG5AbWl4aW4gYWJzb2x1dGUtY2VudGVyKCRwb3M6IGFic29sdXRlKSB7XHJcblx0cG9zaXRpb246ICRwb3M7XHJcblx0dG9wOiA1MCU7XHJcblx0bGVmdDogNTAlO1xyXG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
