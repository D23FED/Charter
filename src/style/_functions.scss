$global-font-size: 100% !default;
// Convert pixels => ems
@function em($pixels, $base: 16) {
  @return ($pixels / $base) * 1em;
}

// Breakpoint viewport sizes and media queries.
// Breakpoints are defined as a map of (name: minimum width), order from small to large
// The map defined in the `$breakpoints` global variable is used as the `$bp` argument by default.
// Name of the next breakpoint (or null for the last breakpoint)
@function breakpoint-next($name, $bp: $breakpoints, $breakpoint-names: map-keys($bp)) {
	$n: index($breakpoint-names, $name);
	@return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// Minimum breakpoint width (Null for the smallest (first) breakpoint)
@function breakpoint-min($name, $bp: $breakpoints) {
	$min: map-get($bp, $name);
	@return if($min != 0, $min, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
@function breakpoint-max($name, $bp: $breakpoints) {
	$next: breakpoint-next($name, $bp);
	@return if($next, breakpoint-min($next, $bp) - bp-to-em(1), null);
}

/// Removes the unit (e.g. px, em, rem) from a value, returning the number only.
@function strip-unit($num) {
	@return $num / ($num * 0 + 1);
}

/// Converts one or more pixel values into matching rem values.
/// @param {Number|List} $values - One or more values to convert. Be sure to separate them with spaces and not commas. If you need to convert a comma-separated list, wrap the list in parentheses.
/// @param {Number} $base [null] - The base value to use when calculating the `rem`. If you're using Foundation out of the box, this is 16px. If this parameter is `null`, the function will reference the `$base-font-size` variable as the base.
/// @returns {List} A list of converted values.
@function rem-calc($values, $base: null) {
	$rem-values: ();
	$count: length($values);

	// If no base is defined, defer to the global font size
	@if $base == null {
		$base: $global-font-size;
	}

	// If the base font size is a %, then multiply it by 16px
	// This is because 100% font size = 16px in most all browsers
	@if unit($base) == '%' {
		$base: ($base / 100%) * 16px;
	}

	@if $count == 1 {
		@return to-rem($values, $base);
	}

	@for $i from 1 through $count {
		$rem-values: append($rem-values, to-rem(nth($values, $i), $base));
	}

	@return $rem-values;
}
// Converts a unitless, pixel, or rem value to em, for use in breakpoints.
@function bp-to-em($value) {
	// Pixel and unitless values are converted to rems
	@if unit($value) == 'px' or unitless($value) {
		$value: rem-calc($value, $base: 16px);
	}

	// Then the value is converted to ems
	@return strip-unit($value) * 1em;
}
