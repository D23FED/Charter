@at-root {
	/* Color Helpers */
}


/* Background colors */

.bg-white {
	background: #fff;
}

.bg-primary {
	background: $brand-primary;
}

.bg-success {
	background: #dff0d8;
}

.bg-info {
	background: #d9edf7;
}

.bg-warning {
	background: #fcf8e3;
}

.bg-danger {
	background: #f2dede;
}

.bg-deep-blue {
	background: $blue;
}

.bg-medium-blue {
	background: $md-blue;
}

.bg-light-blue {
	background: $lt-blue;
}

.bg-light-gray {
	background: #e4e4e4;
}

.bg-gray {
	background: $gray;
}

.bg-gray-f8 {
	background: #f8f8f8;
}

.bg-dark-gray {
	background: $dk-gray;
}

.bg-teal {
	background: $teal;
}

.bg-yellow {
	background: $yellow;
}

.bg-pink {
	background: $pink;
}

.bg-purple {
	background: $purple;
}


/* Translucent backgrounds */

.bg-transparent-white {
	@include bg-white(65);
}

.bg-transparent-white-xs-only {
	@media (max-width: $breakpoint-sm-max) {
		@include bg-white(65);
	}
}

.bg-transparent-white-sm-only {
	@media (min-width: map-get($breakpoints, 'sm')) and (max-width: (map-get($breakpoints, 'md') - 1px)) {
		@include bg-white(65);
	}
}

.bg-transparent-white-md-only {
	@media (min-width: map-get($breakpoints, 'md')) and (max-width: (map-get($breakpoints, 'lg') - 1px)) {
		@include bg-white(65);
	}
}

// Responsive translucent white backgrounds
@each $bp-name,
$bp-width in $breakpoints {
	@if $bp-name !='xxs' and $bp-name !='xs' {
		.bg-transparent-white-#{$bp-name} {
			@include breakpoint($bp-name) {
				@include bg-white(65);
			}
		}
	}
}

.bg-transparent-deep-blue {
	background: rgba(1, 57, 99, 0.8);
}


/* Gradient backgrounds */

.bg-gradient-primary {
	background: linear-gradient(to bottom, #083e60 0%, #0b7ac0 100%);
}

.bg-gradient-secondary {
	background: linear-gradient(to bottom, #d4d3d3 0%, #f1f1f1 100%);
}

.bg-gradient-success {
	background: linear-gradient(to bottom, #006c5b 0%, #00ab90 100%);
}

.bg-gradient-tertiary {
	background: linear-gradient(to bottom, #E4E4E4 0%, #9A9B9F 100%);
}

.bg-inset-gradient {
	position: relative;
	box-shadow: 0.5vw 0vw 1vw 0 #c4c2c2 inset, -0.5vw 0 1vw 0 #c4c2c2 inset;
	background: #f7f7f7;
	&::after {
		background: rgba(0, 0, 0, 0.5);
		content: "";
		filter: blur(.5rem);
		width: 102%;
		position: absolute;
		bottom: -2%;
		height: 2rem;
		left: -1%;
		z-index: -1;
	}
}

.bg-secondary-inset-gradient {
	box-shadow: 0 2px 38px #b2b2b2 inset, 0 -350px 75px #d8d8d8 inset;
}


/* Already in link component css */

.text-primary {
	color: $blue;
}

.text-info {
	color: $lt-blue;
}

.text-warning {
	color: $yellow;
}

.text-danger {
	color: $pink;
}

.text-success {
	color: #009E3D;
}


/* Added in Helpers*/

// Font colors
.text-white {
	color: #fff;
	@at-root a#{&} {
		text-decoration: none;
		@include hover-focus {
			color: #fff;
			text-decoration: underline;
		}
	}
	// Different behavior inside the Link Component, in case author has added a pseudo-element icon
	.linkComponent & {
		@include hover-focus {
			text-decoration: none;
			// SPAN inside A
			.linkLabel {
				text-decoration: underline;
			}
		}
	}
}

.text-black {
	color: #000;
}

// Same as primary
.text-deep-blue {
	color: $blue;
}

.text-medium-blue,
.text-secondary {
	color: $md-blue;
}

// Same as info
.text-light-blue {
	color: $lt-blue;
}

.text-gray {
	color: $gray;
}

.text-dark-gray {
	color: $dk-gray;
}

.text-teal {
	color: $teal;
}

// Same as warning
.text-yellow {
	color: $yellow;
	@at-root a#{&} {
		@include hover-focus {
			color: #fff;
		}
	}
}

// Same as danger
.text-pink {
	color: $pink;
}

.text-purple {
	color: $purple;
}

.text-muted {
	color: #777;
}

.text-gradient-blue {
	@include gradient-text-blue($lt-blue)
}

// Random/legacy
a {
	&.color-light {
		color: #fff;
		@include hover-focus {
			color: $link-hover-color-light;
		}
	}
}

li {
	.light-color & {
		color: #fff;
	}
}
