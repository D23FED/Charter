@at-root {
	/* Margin and Padding */
}

$spacer : 1rem;
$spacer-x: $spacer;
$spacer-y: $spacer;
$spacers: ( // Zero
	0: ( x: 0, y: 0), // Positive
	5: (
		x: ($spacer-x * .5),
		y: ($spacer-y * .5)),
	10: (
		x: ($spacer-x),
		y: ($spacer-y)),
	15: (
		x: ($spacer-x * 1.5),
		y: ($spacer-y * 1.5)),
	 20: (
		 x: ($spacer-x * 2),
		 y: ($spacer-y * 2)),
	 25: (
		 x: ($spacer-x * 2.5),
		 y: ($spacer-y * 2.5))
);
$spacers-negative: (
	// Negative
	n5: (
		x: ($spacer-x * -.5),
		y: ($spacer-y * -.5)),
	n10: (
		x: ($spacer-x * -1),
		y: ($spacer-y * -1)),
	n15: (
		x: ($spacer-x * -1.5),
		y: ($spacer-y * -1.5)),
	n20: (
		x: ($spacer-x * -2),
		y: ($spacer-y * -2)),
	n25: (
		x: ($spacer-x * -2.5),
		y: ($spacer-y * -2.5))
	);

// Generate positive and 0 margins
@each $breakpoint in map-keys($breakpoints) {
	@if $breakpoint !='xs' {
		@include media-breakpoint-up($breakpoint) {
			$infix: breakpoint-infix($breakpoint, $breakpoints);
			@each $prop,
			$abbrev in (margin: m, padding: p) {
				@each $size, $lengths in $spacers {
					$length-x: map-get($lengths, x);
					$length-y: map-get($lengths, y);
					.#{$abbrev}#{$infix}-#{$size} {
						#{$prop}: $length-y $length-x;
					}
					.#{$abbrev}t#{$infix}-#{$size} {
						#{$prop}-top: $length-y;
					}
					.#{$abbrev}r#{$infix}-#{$size} {
						#{$prop}-right: $length-x;
					}
					.#{$abbrev}b#{$infix}-#{$size} {
						#{$prop}-bottom: $length-y;
					}
					.#{$abbrev}l#{$infix}-#{$size} {
						#{$prop}-left: $length-x;
					}
					.#{$abbrev}x#{$infix}-#{$size} {
						#{$prop}-right: $length-x;
						#{$prop}-left: $length-x;
					}
					.#{$abbrev}y#{$infix}-#{$size} {
						#{$prop}-top: $length-y;
						#{$prop}-bottom: $length-y;
					}
				}
			}
			// Some special margin utils
			.m#{$infix}-auto {
				margin: auto;
			}
			.mt#{$infix}-auto {
				margin-top: auto;
			}
			.mr#{$infix}-auto {
				margin-right: auto;
			}
			.mb#{$infix}-auto {
				margin-bottom: auto;
			}
			.ml#{$infix}-auto {
				margin-left: auto;
			}
			.mx#{$infix}-auto {
				margin-right: auto;
				margin-left: auto;
			}
			.my#{$infix}-auto {
				margin-top: auto;
				margin-bottom: auto;
			}
		}
	}
}

@at-root {
	/* Legacy: To be removed following authoring */
}
.p-0-sm {
	@include breakpoint('sm') {
		padding: 0;
	}
}

.p-0-md {
	@include breakpoint('md') {
		padding: 0;
	}
}

.p-0-lg {
	@include breakpoint('lg') {
		padding: 0;
	}
}

.p-15-sm {
	@include breakpoint('sm') {
		padding: 1.5rem;
	}
}

.p-15-md {
	@include breakpoint('md') {
		padding: 1.5rem;
	}
}

.p-15-lg {
	@include breakpoint('lg') {
		padding: 1.5rem;
	}
}

.p-20-sm {
	@include breakpoint('sm') {
		padding: 2rem;
	}
}

.p-20-md {
	@include breakpoint('md') {
		padding: 2rem;
	}
}

.p-20-lg {
	@include breakpoint('lg') {
		padding: 2rem;
	}
}

@at-root {
	/* End Legacy */
}
