/* Image Art Direction */
@import 'initialize';

// Horizontal focus points
// 1 = far left
// 2 = left
// 3 = center
// 4 = right
// 5 = far right

$focus-far-left: left;
$focus-left: 25%;
$focus-middle: 50%;
$focus-right: 75%;
$focus-far-right: right;
$x-positions: $focus-far-left, $focus-left, $focus-middle, $focus-right, $focus-far-right;
$y-positions: top, bottom;
$x-position-default: center;
$img-container-namespace: image-focus;
$img-container: background-image;
$component-class: imageArtDirection;

@import 'testing';

// Prevent duplicate container padding
.#{$component-class} {
	// If IAD is set inside a fixed-width container, do not set fixed widths on any containers inside it
	.container & {
		// remove padding on IAD so that the photo touches the edges of the container
		@include bs-row;

		// If IAD itself is already inside a container, remove fixed widths from nested containers
		.container {
			width: auto;
		}
	}

	// Inside a fluid-width page template or container, remove padding on IAD so that it touches the edges of the viewport
	.container-fluid & {
		@include bs-row;
	}

	// Remove padding from inner containers (set on outer component-wrapping element)
	.container {
		padding-left: 0;
		padding-right: 0;

		// remove fixed widths from nested containers
		.container {
			width: auto;
		}
	}

	// Set standard padding on bg image container
	.#{$img-container} {
		padding: $grid-gutter-width / 2;
		min-height: 5rem;
		background-size: cover;
		background-repeat: no-repeat;
		background-position: center;
	}

	// Generate image positioning classes
	@for $i from 1 through length($x-positions) {
		&.mob-#{$img-container-namespace}-#{$i} {
			.#{$img-container} {
				background-position: nth($x-positions, $i) $x-position-default;
			}
		}

		@for $j from 1 through length($y-positions) {
			&.mob-#{$img-container-namespace}-#{$i}.mob-#{$img-container-namespace}-#{nth($y-positions, $j)} {
				.#{$img-container} {
					background-position: nth($x-positions, $i) nth($y-positions, $j);
				}
			}
		}
	}

	@include breakpoint('sm') {
		@for $i from 1 through length($x-positions) {
			&.#{$img-container-namespace}-#{$i} {
				.#{$img-container} {
					background-position: nth($x-positions, $i) $x-position-default;
				}
			}

			@for $j from 1 through length($y-positions) {
				&.#{$img-container-namespace}-#{$i}.#{$img-container-namespace}-#{nth($y-positions, $j)} {
					.#{$img-container} {
						background-position: nth($x-positions, $i) nth($y-positions, $j);
					}
				}
			}
		}
	}
}
