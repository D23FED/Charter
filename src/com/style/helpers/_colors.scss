@at-root {
	/* Color Helpers */
}

$common-colors: ( white: $white, black: $black, gray: $gray, dk-gray: $dk-gray, muted: #777);
@at-root {
	/* Text colors */
}

@each $name,
$color in $common-colors {
	@include helper-text-color($name, $color);
}

@at-root {
	/* Background colors */
}

.bg {
	&-white {
		background: #fff;
	}
	// Bootstrap default color values
	&-success {
		background: #dff0d8;
	}
	&-info {
		background: #d9edf7;
	}
	&-warning {
		background: #fcf8e3;
	}
	&-danger {
		background: #f2dede;
	}
	// Grayscale
	&-gray {
		background: $gray;
	}
	&-gray-f8 {
		background: #f8f8f8;
	}
	&-dark-gray {
		background: $dk-gray;
	}
	&-transparent-white {
		@include bg-white(65);
	}
	&-transparent-white-xs-only {
		@media (max-width: $breakpoint-sm-max) {
			@include bg-white(65);
		}
	}
	&-transparent-white-sm-only {
		@media (min-width: map-get($breakpoints, 'sm')) and (max-width: (map-get($breakpoints, 'md') - 1px)) {
			@include bg-white(65);
		}
	}
	&-transparent-white-md-only {
		@media (min-width: map-get($breakpoints, 'md')) and (max-width: (map-get($breakpoints, 'lg') - 1px)) {
			@include bg-white(65);
		}
	}
	&-transparent-deep-blue {
		background: rgba(1, 57, 99, 0.8);
	}
}

// Responsive translucent white backgrounds
@each $bp-name,
$bp-width in $breakpoints {
	@if $bp-name !='xxs' and $bp-name !='xs' {
		.bg-transparent-white-#{$bp-name} {
			@include breakpoint($bp-name) {
				@include bg-white(65);
			}
		}
	}
}

@at-root {
	/* Gradients */
}

.gradient-lt-gray,
.lt-gray-gradient {
	background: linear-gradient(to right, #d4d4d4 0, #fafafa 8%, #fff 50%, #fafafa 92%, #d4d4d4 100%);
}

.gradient-x-lt-gray,
.extra-lt-gray-gradient {
	background: linear-gradient(to right, #fff 0, #fafafa 25%, #efefef 50%, #fafafa 75%, #fff 100%);
}
