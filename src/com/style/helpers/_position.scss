@at-root {
	/* Position */
}

$vertical-aligns: (top, middle, bottom, baseline);
.relative {
	position: relative;
}

.absolute {
	position: absolute;
}

@at-root {
	/* .left and .right are Legacy classes combining float and abs positioning. To be removed following authoring update */
}

.left {
	float: left;
	left: 0;
}

.right {
	float: right;
	right: 0;
}

.float-left {
	float: left;
}

.float-right {
	float: right;
}

.bottom-justified {
	bottom: 0;
}

.top-justified {
	top: 0;
}

.left-justified {
	left: 0;
}

.right-justified {
	right: 0;
}

.centered {
	margin-left: auto;
	margin-right: auto;
}

.vertical-center {
	@include vertical-center('relative');
}

.vertical-center-abs {
	@include vertical-center;
}

.vertical-center-flex {
	display: flex;
	align-items: center;
}

.horizontal-center {
	@include horizontal-center;
}

.horizontal-center-flex {
	display: flex;
	justify-content: center;
}

.absolute-center {
	@include absolute-center;
}

.absolute-center-flex {
	display: flex;
	justify-content: center;
	align-items: center;
}

.full {
	width: 100%;
}

@each $alignment in $vertical-aligns {
	.vertical-#{$alignment} {
		vertical-align: $alignment;
	}
}

// Responsive alignments
@include breakpoint-bt('xxs', 'xs') {
	.xs-only {
		&-text-left {
			text-align: left;
		}
		&-float-left {
			float: left;
		}
		&-text-right {
			text-align: right;
		}
		&-float-right {
			float: right;
		}
	}
}

@include breakpoint-only('sm') {
	.sm-only {
		&-text-left {
			text-align: left;
		}
		&-float-left {
			float: left;
		}
		&-text-right {
			text-align: right;
		}
		&-float-right {
			float: right;
		}
	}
}

@include breakpoint-only('md') {
	.md-only {
		&-text-left {
			text-align: left;
		}
		&-float-left {
			float: left;
		}
		&-text-right {
			text-align: right;
		}
		&-float-right {
			float: right;
		}
	}
}

@include breakpoint('lg') {
	.lg-only {
		&-text-left {
			text-align: left;
		}
		&-float-left {
			float: left;
		}
		&-text-right {
			text-align: right;
		}
		&-float-right {
			float: right;
		}
	}
}
