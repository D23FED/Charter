 // Modfied button mixin from Bootstrap
// Accepts additional colors instead of assuming variations
// Removed support for dropdowns and badges
// Requires only text, bg and border color, all other states will be generated. Optionally you may pass overrides for any state's color.
// Accepts a map with this format:
// $btn-colors: (
// 	color          : #000000,
// 	background     : #000000,
// 	border         : #000000,
// 	hover          : #000000,
// 	hover-bg       : #000000,
// 	hover-bd       : #000000,
// 	focus          : #000000,
// 	focus-bg       : #000000,
// 	focus-bd       : #000000,
// 	active         : #000000,
// 	active-bg      : #000000,
// 	active-bd      : #000000,
// 	active-hover   : #000000,
// 	active-hover-bg: #000000,
// 	active-hover-bd: #000000
// );
@mixin spe_button-variant($color-map) {
	// Default
	$btn-color: map-get($color-map, color);
	$btn-bg-color: map-get($color-map, background);
	$btn-bd-color: map-get($color-map, border);
	// Hover
	$btn-color-hover: $btn-color;
	$btn-bg-color-hover: darken($btn-bg-color, 10%);
	$btn-bd-color-hover: darken($btn-bd-color, 12%);
	// Focus
	$btn-color-focus: $btn-color;
	$btn-bg-color-focus: $btn-bg-color-hover;
	$btn-bd-color-focus: darken($btn-bd-color, 25%);
	// Active
	$btn-color-active: $btn-color;
	$btn-bg-color-active: $btn-bg-color-hover;
	$btn-bd-color-active: $btn-bd-color-hover;
	// Active and hover
	$btn-color-active-hover: $btn-color;
	$btn-bg-color-active-hover: darken($btn-bg-color, 17%);
	$btn-bd-color-active-hover: $btn-bd-color-focus;
	// Check for hover color
	@if map-has-key($color-map, hover) {
		$btn-color-hover: map-get($color-map, hover);
		$btn-bg-color-hover: darken($btn-color-hover, 10%);
		$btn-bd-color-hover: darken($btn-color-hover, 12%);
	}
	// Check for focus color
	@if map-has-key($color-map, focus) {
		$btn-color-focus: map-get($color-map, focus);
		$btn-bg-color-focus: darken($btn-color-focus, 10%);
		$btn-bd-color-focus: darken($btn-color-focus, 25%);
	}
	// Check for active color
	@if map-has-key($color-map, active) {
		$btn-color-active: map-get($color-map, active);
		$btn-bg-color-active: darken($btn-color-active, 10%);
		$btn-bd-color-active: darken($btn-color-active, 12%);
	}
	// Check for active + hover color
	@if map-has-key($color-map, active-hover) {
		$btn-color-active-hover: map-get($color-map, active-hover);
		$btn-bg-color-active-hover: darken($btn-color-active-hover, 17%);
		$btn-bd-color-active-hover: darken($btn-color-active, 25%);
	}
	// Hover background and border override
	@if map-has-key($color-map, hover-bg) {
		$btn-bg-color-hover: map-get($color-map, hover-bg);
	}
	@if map-has-key($color-map, hover-bd) {
		$btn-bd-color-hover: map-get($color-map, hover-bd);
	}
	// focus background and border override
	@if map-has-key($color-map, focus-bg) {
		$btn-bg-color-focus: map-get($color-map, focus-bg);
	}
	@if map-has-key($color-map, focus-bd) {
		$btn-bd-color-focus: map-get($color-map, focus-bd);
	}
	// active background and border override
	@if map-has-key($color-map, active-bg) {
		$btn-bg-color-active: map-get($color-map, active-bg);
	}
	@if map-has-key($color-map, active-bd) {
		$btn-bd-color-active: map-get($color-map, active-bd);
	}
	// active-hover background and border override
	@if map-has-key($color-map, active-hover-bg) {
		$btn-bg-color-active-hover: map-get($color-map, active-hover-bg);
	}
	@if map-has-key($color-map, active-hover-bd) {
		$btn-bd-color-active-hover: map-get($color-map, active-hover-bd);
	}
	color: $btn-color;
	background-color: $btn-bg-color;
	border-color: $btn-bd-color;
	// Focus
	&:focus,
	&.focus {
		color: $btn-color-focus;
		background-color: $btn-bg-color-focus;
		border-color: $btn-bd-color-focus;
		outline-color: invert($btn-bg-color-focus);
	}
	// Hover
	&:hover {
		color: $btn-color-hover;
		background-color: $btn-bg-color-hover;
		border-color: $btn-bd-color-hover;
	}
	// Active
	// .open > &.dropdown-toggle,
	&:active,
	&.active {
		color: $btn-color-active;
		background-color: $btn-bg-color-active;
		border-color: $btn-bd-color-active;
		// Active & hover/focus
		&:hover,
		&:focus,
		&.focus {
			color: $btn-color-active-hover;
			background-color: $btn-bg-color-active-hover;
			border-color: $btn-bd-color-active-hover;
		}
	}
	// .open > &.dropdown-toggle,
	&:active,
	&.active {
		// background-image: none;
	}
	// Disabled
	// fieldset[disabled] &,
	&.disabled,
	&[disabled] {
		&:hover,
		&:focus,
		&.focus {
			background-color: $btn-bg-color;
			border-color: $btn-bd-color;
		}
	}
	// .badge {
	//   color: $btn-bg-color;
	//   background-color: $btn-color;
	// }
}

// Residential
@mixin btn-default {
	background-color: $lt-blue;
	background-image: none;
	border: 0;
	border-radius: $btn-border-radius-base;
	color: #fff;
	font-size: 1.9rem;
	text-transform: uppercase;
	color: #fff;
	&:hover,
	&:active,
	&:focus,
	&:active:focus,
	&:active:hover {
		background-color: $md-blue;
		color: #fff;
	}
	&:active {
		color: #fff;
		&:focus,
		&:hover {
			color: #fff;
		}
	}
	&:focus {
		outline-color: $yellow;
	}
}

// Residential
@mixin btn-primary {
	// $color, $background, $border
	@include button-variant(#fff, $bright-orange, $tangerine);
	background-image: linear-gradient(to bottom, $lt-orange, $bright-orange);
	border-width: 0.1rem;
	border-radius: $btn-border-radius-base;
	text-shadow: 0.1rem 0.1rem 0.3rem #888;
	font-weight: bold;
	font-size: 1.9rem;
	text-transform: uppercase;
}

// Business: Default buttons
// Todo: split up mixin files by LoB
@mixin spe_btn-default-bus() {
	@include spe_button-variant($btn-default-colors);
	text-shadow: 0.1rem 0.1rem 0.3rem #888;
	background-image: linear-gradient(to bottom, #fdaa18 0%, #fdaa18 59%, #ffa300 60%, #ffa300 100%);
	border-width: 0;
	border-style: none;
	position: relative;
	padding-top: 0;
	padding-bottom: 0;
	font-weight: 500;
	white-space: nowrap;
	text-transform: uppercase;
	text-decoration: none;
	// Old?
	padding-right: 1.25em;
	padding-left: 1.25em;
	line-height: 2.1;
	box-shadow: 0 0.1rem 0 rgba(0, 0, 0, 0.2);
	@include hover-focus {
		background-image: none;
		background-color: map-get($btn-default-colors, bg-gradient-hover-start);
	}
	&:focus,
	&.focus {
		outline-color: invert(map-get($btn-default-colors, bg-gradient-hover-start));
	}
	&:active,
	&.active {
		box-shadow: inset 0 0.3rem 0.5rem rgba(0, 0, 0, 0.125);
	}
}

@mixin pseudo-double-angle-right() {
	&::after {
		content: "\00a0\e601";
		font-family: $font-charter-icons;
		display: inline-block;
		font-style: normal;
		font-weight: normal;
		font-size: 1em;
		padding: 0;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		z-index: map-get($z-layer-bus, btn-icon);
		vertical-align: baseline;
	}
}
